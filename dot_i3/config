# VARS
set $term alacritty
set $up k
set $right l
set $down j
set $left h

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window none
new_float none

# Hide borders
hide_edge_borders none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:URWGothic-Book 11

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term --working-directory "`xcwd`" -e zsh

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+c exec --no-startup-id "rofi -show calc -modi calc -no-show-match -no-sort -terminal $term -m -4"
bindsym $mod+d exec --no-startup-id "rofi -show run -terminal $term -m -4"
bindsym $mod+p exec --no-startup-id "keepmenu"
bindsym $mod+Tab exec --no-startup-id "rofi -show window -show-icons"
#bindsym $mod+b exec --no-startup-id "rofi -show file-browser -modi file-browser -show-icons"
bindsym $mod+m exec --no-startup-id "rofimoji -a clipboard"
bindsym $mod+shift+n exec --no-startup-id "dunstctl context"

# launch categorized menu
bindsym $mod+z exec --no-startup-id morc_menu

# light control
bindsym $mod+ctrl+l mode "$mode_light"
set $mode_light (t)oggle | (r)edshift | (k) brighter | (j) dimmer | (h)otter | co(l)der
mode "$mode_light" {
    bindsym t exec --no-startup-id /home/gbottari/apps/yeelight-shell-scripts/yeelight-toggle.sh, mode "default"
    bindsym k exec --no-startup-id /home/gbottari/apps/yeelight-shell-scripts/config.sh -b 20
    bindsym j exec --no-startup-id /home/gbottari/apps/yeelight-shell-scripts/config.sh -b -20
    bindsym h exec --no-startup-id /home/gbottari/apps/yeelight-shell-scripts/config.sh -t -500
    bindsym l exec --no-startup-id /home/gbottari/apps/yeelight-shell-scripts/config.sh -t 500
    bindsym r exec --no-startup-id /home/gbottari/apps/yeelight-shell-scripts/yeelight-redshift.sh, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+ctrl+m mode "$mode_auto"
set $mode_auto (a)uto | (m)ovie | (c)onference | (e)dit
mode "$mode_auto" {
    bindsym a exec --no-startup-id /home/gbottari/code/smart-devs/set_scene.sh auto, mode "default"
    bindsym m exec --no-startup-id /home/gbottari/code/smart-devs/set_scene.sh movie, mode "default"
    bindsym c exec --no-startup-id /home/gbottari/code/smart-devs/set_scene.sh conference, mode "default"
    bindsym e exec --no-startup-id /home/gbottari/code/smart-devs/scripts/manage.sh, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
bindsym $mod+Ctrl+p exec pavucontrol

################################################################################################

# Application Shortcuts
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec pcmanfm "`xcwd`"
bindsym $mod+t exec --no-startup-id pkill picom
bindsym $mod+Ctrl+t exec --no-startup-id picom -b --config /home/gbottari/.config/picom.conf
#bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym $mod+Print exec --no-startup-id "flameshot gui"
bindsym $mod+n exec --no-startup-id "alacritty -t ranger_float -e ranger `xcwd`"
bindsym $mod+y exec --no-startup-id "mpv $(xclip -o)"
bindsym $mod+b exec --no-startup-id "alacritty -t newsboat_float -e newsboat"
#bindsym $mod+p exec --no-startup-id "peerflix $(xclip -o) -k"


focus_follows_mouse no

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# split orientation
bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:ï‚¬
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# Splitting workspaces automatically
workspace $ws1 output eDP-1
workspace $ws2 output HDMI-1
workspace $ws3 output eDP-1
workspace $ws4 output HDMI-1
workspace $ws5 output eDP-1
workspace $ws6 output HDMI-1
workspace $ws7 output eDP-1
workspace $ws8 output HDMI-1

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Assign Workspaces:
assign [class="discord"] $ws7
assign [class="slack"] $ws7

# Open specific applications in floating mode
for_window [instance="newsboat_float"] floating enable sticky enable border pixel 1
for_window [instance="ranger_float"] floating enable sticky enable border pixel 1
for_window [class="mpv"] floating enable border pixel 1
for_window [title="alsamixer"] floating enable border pixel 1
for_window [title="File Transfer*"] floating enable
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [class="Pamac-manager"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal

# tab styling
for_window [class=".*"] title_format "<span bgcolor='$bg3' font='Monospace 10'>%title</span>" title_window_icon padding 6px

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Automatic switching between workspaces
workspace_auto_back_and_forth yes 

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym $left resize shrink width 5 px or 5 ppt
        bindsym $down resize grow height 5 px or 5 ppt
        bindsym $up resize shrink height 5 px or 5 ppt
        bindsym $right resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Lock screen
bindsym $mod+9 exec --no-startup-id blurlock

# Autostart applications
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id firefox
exec --no-startup-id /usr/lib/geoclue-2.0/demos/agent
#exec --no-startup-id dropbox
exec --no-startup-id numlockx on
exec --no-startup-id nitrogen --restore; sleep 1; picom -b --config /home/gbottari/.config/picom.conf
exec --no-startup-id nm-applet
exec --no-startup-id volumeicon
exec --no-startup-id xfce4-power-manager
exec --no-startup-id ~/.screenlayout/default.sh
exec --no-startup-id redshift-gtk
exec --no-startup-id sleep 3; /home/gbottari/scripts/fix_keyboard.sh
# exec --no-startup-id noisetorch -i

# exec --no-startup-id blueman-applet
# exec_always --no-startup-id sbxkb
exec_always --no-startup-id fix_xcursor
exec_always --no-startup-id wal -R && feh --bg-fill ~/Dropbox/wallpapers/default 
exec_always --no-startup-id sleep 2; $HOME/.config/polybar/launch.sh
exec_always --no-startup-id sleep 4; $HOME/scripts/fix_rofi.sh

# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your 
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

# colors
set_from_resource $fg i3wm.color7
set_from_resource $bg i3wm.color2
set_from_resource $bg2 i3wm.color3
set_from_resource $bg3 i3wm.color9

# class                 border  backgr. text indicator child_border
client.focused          $bg2    $bg2    $fg  $bg2      $bg2
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 10
gaps outer 0

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders no_gaps

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

